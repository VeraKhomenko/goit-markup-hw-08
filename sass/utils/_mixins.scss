@mixin flex($justify: center, $align: center, $width: 44px, $height: 44px, $border: 50%) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    width: $width;
    height: $height;
    border-radius: $border;
}

//   @include flex();

@mixin absolute($top: auto,
    $right: auto,
    $bottom: auto,
    $left: auto,
    $transf: translate(-50%, -50%)) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    transform: $transf;
}

//    @include absolute(auto, auto, 0%, 50%, translate(-50%, 0%));

@mixin font-size($ls: 0.04em, $fw: 400, $fs: 0.875rem, $lh: 1.714) {
    font-family: 'Roboto', sans-serif;
    font-style: normal;
    letter-spacing: $ls;
    font-weight: $fw;
    font-size: $fs;
    line-height: $lh;
}

//  @include font-size(0.03em, 700, 14px, 1.142);

@mixin font-logo($ls: 0.03em, $fw: 700, $fs: 1.625rem, $lh: 1.92) {
    font-family: 'Raleway', sans-serif;
    font-style: normal;
    letter-spacing: $ls;
    font-weight: $fw;
    font-size: $fs;
    line-height: $lh;
}

// @include font-logo();

@mixin uppercase($m: auto auto auto auto) {
    margin: $m;
    text-transform: uppercase;
}

// @include uppercase ();

@mixin indent($m: auto auto auto auto, $p: auto auto auto auto) {
    margin: $m;
    padding: $p;
}

//  @include indent(0 auto 0 auto, $p: 0 15px 0 15px);


@mixin breakpoint($range) {
    $mobile: 480px;
    $tablet: 768px;
    $desktop: 1200px;

    @if $range==mobile-only {
        @media (max-width: #{$mobile - 1}) {
            @content;
        }
    }

    @else if $range==mobile-only-bunner {

        @media screen and (min-device-pixel-ratio: 2),
        screen and (min-resolution: 192dpi),
        screen and (min-resolution: 2dppx) {
            @content;
        }
    }


    @else if $range==mobile {
        @media (min-width: $mobile) {
            @content;
        }
    }

    @else if $range==mobile-bunner {

        @media screen and (min-device-pixel-ratio: 2),
        screen and (min-resolution: 192dpi),
        screen and (min-resolution: 2dppx) {
            @content;
        }
    }

    @else if $range==mobile-max {
        @media (max-width: #{$tablet - 1}) {
            @content;
        }
    }

    @else if $range==tablet {
        @media (min-width: $tablet) {
            @content;
        }
    }

    @else if $range==tablet-onle {
        @media (max-width: #{$desktop - 1}) {
            @content;
        }
    }

    @else if $range==tablet-bunner {

        @media screen and (min-device-pixel-ratio: 2),
        screen and (min-resolution: 192dpi),
        screen and (min-resolution: 2dppx) {
            @content;
        }
    }


    @else if $range==desktop {
        @media (min-width: $desktop) {
            @content;
        }
    }

    @else if $range==desktop-bunner {

        @media screen and (min-device-pixel-ratio: 2),
        screen and (min-resolution: 192dpi),
        screen and (min-resolution: 2dppx) {
            @content;
        }
    }
}

//@include breakpoint(desktop) {  padding: 20px;  }



// $breakpoints: ("phone": 480px, "tablet": 768px, "desktop": 1200px);

// @mixin breakpoint($breakpoint, $direction) {

//     // Get the breakpoint value.
//     $breakpoint-value: map-get($breakpoints, $breakpoint);

//     @if $direction==max {
//         @media screen and (max-width: ($breakpoint-value - 1)) {
//             @content;
//         }
//     }

//     @else if $direction==min {
//         @media screen and (min-width: ($breakpoint-value)) {
//             @content;
//         }
//     }
// }

//   @include breakpoint(phone, max) { width: 480px;}}





// @mixin breakpoint($width, $type: min) {
//     @if map_has_key($breakpoints, $width) {
//         $width: map_get($breakpoints, $width);

//         @if $type==max {
//             $width: $width - 1px;
//         }

//         @media only screen and (#{$type}-width: $width) {
//             @content;
//         }
//     }
// }